AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Creates Orchestrator and Executor roles for CoOps integration.
  - Orchestrator: Can update Executor's IAM policies.
  - Executor: Used for actual execution.

Parameters:
  IacRoleArn:
    Type: String
    Description: The full ARN of the CoOps IAM role allowed to assume these roles (e.g., arn:aws:iam::1234567890:role/coops-12345-xxxx-iac-role)
  UniqueId:
    Type: String
    Description: A unique identifier for this deployment (e.g., 12345)
  ExternalId:
    Type: String
    Description: The ExternalId required for trust (e.g., coops-xxxxx)

Resources:
  OrchestratorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub coops-orchestrator-${UniqueId}-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref IacRoleArn
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref ExternalId
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - eks.amazonaws.com
                - ecs.amazonaws.com
                - lambda.amazonaws.com
                - pods.eks.amazonaws.com
            Action:
              - sts:AssumeRole
              - sts:TagSession
      Policies:
        - PolicyName: OrchestratorUpdateExecutorPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:GetRolePolicy
                Resource: !Sub arn:aws:iam::*:role/coops-executor-${UniqueId}-role

  ExecutorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub coops-executor-${UniqueId}-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref IacRoleArn
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref ExternalId
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - eks.amazonaws.com
                - ecs.amazonaws.com
                - lambda.amazonaws.com
                - pods.eks.amazonaws.com
            Action:
              - sts:AssumeRole
              - sts:TagSession
      # No permissions by default; Orchestrator will manage these dynamically

Outputs:
  OrchestratorRoleArn:
    Description: ARN of the Orchestrator role
    Value: !GetAtt OrchestratorRole.Arn
  ExecutorRoleArn:
    Description: ARN of the Executor role
    Value: !GetAtt ExecutorRole.Arn
